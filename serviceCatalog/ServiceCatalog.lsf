MODULE ServiceCatalog;

REQUIRE MasterData, Currency;

NAMESPACE ServiceCatalog;

CLASS Software 'Программное обеспечение';
id 'Код' = DATA STRING[5] (Software) IN base;
softwareID = GROUP AGGR Software s BY id(s);
name 'Наименование'= DATA STRING (Software) IN base;
softwareName = GROUP AGGR Software s BY name(s);
parent 'Родитель' = DATA Software (Software);
nameParent 'Родитель' (Software s) = name(parent(s)) IN base;
description 'Описание' = DATA RICHTEXT (Software) IN base;
level 'Уровень' (Software child, Software parent) = RECURSION 1l IF child IS Software AND parent == child STEP 2l IF parent == parent($parent) MATERIALIZED;

                                                                 
CLASS LicenseType 'Типы лицензий';
name 'Тип лицензии' = DATA STRING (LicenseType) IN base;
licenseType = GROUP AGGR LicenseType ls BY name(ls);

CLASS License 'Лицензии';
type = DATA LicenseType(License);
typeName 'Тип' (License l) = name(type(l)) IN base;
software = DATA Software(License);
softwareName 'Программа' (License l)= name(software(l)) IN base;
id 'Код' (License l)= id(software(l));
binding 'Обязательная' = DATA BOOLEAN (License) IN base;
nameLic 'Наименование лицензии' = DATA STRING (License) IN base;
nameLicUniq = GROUP AGGR License l BY nameLic(l);
name 'Наименование' (License l)= CONCAT '_', nameLic(l), softwareName(l);
description 'Описание' = DATA RICHTEXT (License) IN base;
price 'Базовая цена USD' = DATA INTEGER (License) IN base;

CLASS BillingCircle 'Биллинговый цикл';
name 'Наименование биллинговог цикла' = DATA STRING (BillingCircle) IN base;
billingCircle = GROUP AGGR BillingCircle bc BY name(bc);

CLASS ServiceType'Тип услуги';
name 'Тип услуги' = DATA STRING (ServiceType) IN base;
serviceType = GROUP AGGR ServiceType st BY name(st);

CLASS Services 'Услуги';
id 'Код' = DATA STRING (Services) IN base;
name 'Наименование' = DATA STRING (Services) IN base;
type = DATA ServiceType(Services);
typeName 'Тип услуги' (Services serv) = name(type(serv)) IN base;
rate'Часовя ставка' = DATA INTEGER (Services) IN base;
billingCircle = DATA BillingCircle(Services) IN base;
billingCircleName 'Биллинговый цикл' (Services serv) = name(billingCircle(serv)) IN base;
software = DATA Software(Services);
softwareName 'Программа' (Services serv) = name(software(serv)) IN base;
description 'Описание' = DATA RICHTEXT (Services) IN base;

FORM licenseType 'Тип лицензий'
    OBJECTS lt = LicenseType
    PROPERTIES (lt) name, NEW, EDIT, DELETE 
    EDIT LicenseType OBJECT lt
;

FORM serviceType 'Тип услуг'
    OBJECTS st = ServiceType
    PROPERTIES (st) name, NEW, EDIT, DELETE 
    EDIT ServiceType OBJECT st
;

FORM billingCircle 'Биллинговый цикл'
    OBJECTS bc = BillingCircle
    PROPERTIES (bc) name, NEW, EDIT, DELETE 
    EDIT BillingCircle OBJECT bc
;

FORM license 'Лицензии'
    OBJECTS l = License
    PROPERTIES (l) id, binding, typeName, softwareName, nameLic, name, price, description, NEW, DELETE
    EDIT License OBJECT l
;

FORM licenseList 'Лицензии'
    OBJECTS l = License
    PROPERTIES (l) typeName, softwareName, nameLic, price
    LIST License OBJECT l
;

FORM softwareEdit 'Программы'
    OBJECTS s = Software
    PROPERTIES (s) id, name, nameParent, description, NEW, EDIT, DELETE
    EDIT Software OBJECT s
;

FORM softwareAndServices'Программы и услуги'
    
    TREE software s = Software PARENT parent(s)
    PROPERTIES(s) id, name, nameParent, NEW, EDIT, DELETE
    
    OBJECTS l = License
    PROPERTIES(l) id, binding, typeName, name, price, description, NEWEDIT NEWSESSION, EDIT, DELETE 
    
    OBJECTS serv = Services
    PROPERTIES (serv) id, name, typeName, rate, billingCircleName, softwareName, description NEWSESSION, NEWEDIT, EDIT, DELETE    
    FILTERGROUP byLevelSoftware
        FILTER 'По модулю' level(software(l), s) DEFAULT 
    FILTERGROUP byLevelService
        FILTER 'По программе' level(software(serv), s) DEFAULT
;

FORM serviceEdit 'Услуги'
    OBJECTS serv = Services
    PROPERTIES (serv) id, name, typeName, rate, billingCircleName, softwareName, description NEWSESSION, NEW, EDIT, DELETE
    EDIT Services OBJECT serv
;

DESIGN softwareAndServices {
    OBJECTS {
        NEW body FIRST {
            fill = 1;
            type = SPLITV ;
            NEW software {
                type = SPLITH;
                MOVE BOX(TREE software){
                    fill = 1;
                };
                MOVE BOX(l){
                    fill = 2;
                };
            }
            NEW services {
                MOVE BOX(serv){
                    fill = 1;
                };
            }
        }
    }
}

NAVIGATOR {
    masterData {
    NEW FOLDER serviceCatalog 'Сервисный каталог'{
        NEW softwareAndServices;
        }
    }
}